version: '3.8'

services:
  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  django-1:
    build: .
    container_name: django-1
    ports:
      - "8000:8000"
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      - db

  django-2:
    build: .
    container_name: django-2
    ports:
      - "8001:8000"
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - django-1
      - django-2

  grafana:
    container_name: "grafana"
    restart: unless-stopped
    image: grafana/grafana-enterprise
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - TERM=linux
      - GF_SERVER_ROOT_URL=http://my.grafana.server/
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - TZ=Asia/Almaty

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.54.1
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  loki:
    hostname: loki
    image: grafana/loki:latest
    environment:
      TZ: "Almaty/Asia"
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/retention-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/retention-config.yaml

volumes:
  postgres_data:
  grafana-data:
  prometheus_data:
